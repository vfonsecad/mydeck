for(i in 1:(nn)){
info.rasch_18[i] = information(math.fit_rasch, range= c(zz[i],zz[i+1]),items =3)$InfoRange
info.rasch_40[i] = information(math.fit_rasch, range= c(zz[i],zz[i+1]),items =16)$InfoRange
info.rasch_t[i] = information(math.fit_rasch, range=c(zz[i],zz[i+1]) )$InfoRange
}
plot(zz[-1],info.rasch_t,type="l",col="blue", xlab="theta", ylab="info")
lines(zz[-1],info.rasch_18, type="l",col="red")
lines(zz[-1],info.rasch_40, type="l",col="green")
c(1.230,0.49,0.49,1.080,0.59,0.28,0.18,.1,.940,1.330,0.19,1.16,0.98,0.34,0.34,0.190,0.210,0.4,0.04,0.83,0.05,0.63,0.34,0.75,0.04,0.86,0.43,0.04,0.810,0.15,0.56,0.84,0.87,0.49,0.52,0.25,1.2,0.71,0.19,0.410,0.5,0.56,1.1,0.65,0.270.27,0.5,0.77,0.730,0.34,0.17,0.16,0.27)
c(1.230,0.49,0.49,1.080,0.59,0.28,0.18,.1,.940,1.330,0.19,1.16,0.98,0.34,0.34,0.190,0.210,0.4,0.04,0.83,0.05,0.63,0.34,0.75,0.04,0.86,0.43,0.04,0.810,0.15,0.56,0.84,0.87,0.49,0.52,0.25,1.2,0.71,0.19,0.410,0.5,0.56,1.1,0.65,0.27,0.27,0.5,0.77,0.730,0.34,0.17,0.16,0.27)
y<-c(1.230,0.49,0.49,1.080,0.59,0.28,0.18,.1,.940,1.330,0.19,1.16,0.98,0.34,0.34,0.190,0.210,0.4,0.04,0.83,0.05,0.63,0.34,0.75,0.04,0.86,0.43,0.04,0.810,0.15,0.56,0.84,0.87,0.49,0.52,0.25,1.2,0.71,0.19,0.410,0.5,0.56,1.1,0.65,0.27,0.27,0.5,0.77,0.730,0.34,0.17,0.16,0.27)
length(y)
mean(y)
var(y)
qnorm(0.975)
qnorm(0.975)*sqrt(var(y)/53)
qnorm(0.975)*sqrt(var(y)/53)+mean(y)
qnorm(0.975)*sqrt(var(y)/53)-mean(y)
qnorm(0.995)
qnorm(0.995)*sqrt(var(y)/53)
qnorm(0.995)*sqrt(var(y)/53)-mean(y)
qnorm(0.995)*sqrt(var(y)/53)+mean(y)
qt(0.995,52)*sqrt(var(y)/53)+mean(y)
qt(0.975,52)
qt(0.975,52)*sqrt(var(y)/53)+mean(y)
qt(0.975,52)*sqrt(var(y)/53)
qt(0.975,52)*sqrt(var(y)/53)+mean(y)
qt(0.975,52)*sqrt(var(y)/53)-mean(y)
qt(0.995,52)
qt(0.995,52)*sqrt(var(y)/53)-mean(y)
qt(0.995,52)*sqrt(var(y)/53)+mean(y)
0.0015*1.645/sqrt(75)
0.0015*1.645/sqrt(75)+0.31
0.0015*1.645/sqrt(75)-0.31
y<-(1.1,0.97,1.03,1.04,0.99,0.98,1.01,1.03)
y<-c(1.1,0.97,1.03,1.04,0.99,0.98,1.01,1.03)
length(y)
y<-c(1.01,0.97,1.03,1.04,0.99,0.98,0.99,1.01,1.03)
qnorm(0.995)*sqrt(var(y)/53)-mean
mean(y)
var(y)
qnorm(0.995)*sqrt(var(y)/9)-mean(y)
qnorm(0.995)*sqrt(var(y)/9)+mean(y)
qt(0.995)*sqrt(var(y)/9)
qt(0.995,8)*sqrt(var(y)/9)
qt(0.995,8)
qt(0.995,8)*sqrt(var(y)/9)-mean(y)
qt(0.995,8)*sqrt(var(y)/9)+mean(y)
pnorm(2.8)
pnorm(2.8)-1
install.packages("multcomp")
library("multcomp", lib.loc="/Users/valeria/Library/R/2.15/library")
library(sem)
install.packages("sem")
library("sem", lib.loc="/Users/valeria/Library/R/2.15/library")
# A silly dataset:
X <- rnorm(100)
Y <- rnorm(100)
Z <- rnorm(1)*X + rnorm(1)*Y + rnorm(1)*X*Y
DF <- data.frame(X,Y,Z)
res <- lm(Z ~ X*Y, data = DF)
semPaths(res)
install.packages("semPlot")
semPaths(res)
install.packages("semPaths")
library("semPlot", lib.loc="/Users/valeria/Library/R/2.15/library")
semPaths(res)
DF
# A silly dataset:
X <- rnorm(100)
Y <- rnorm(100)
Z <- rnorm(1)*X + rnorm(1)*Y
DF <- data.frame(X,Y,Z)
res <- lm(Z ~ X+Y, data = DF)
semPaths(res)
library("lavaan")
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
names(Data) <- c(paste("y", 1:6, sep=""),
paste("x", 1:3, sep=""))
model.Lavaan <- ’f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f1 + f2 ~ x1 + x2 + x3 ’
library("lavaan")
fit <- lavaan:::cfa(model.Lavaan, data=Data, std.lv=TRUE)
model.Lavaan <- f1 =~ y1 + y2 + y3
head(Data)
attach(Data)
model.Lavaan <- f1 =~ y1 + y2 + y3
f1 =~ y1 + y2 + y3
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6 '
fit <- lavaan::cfa(model, data=Data)
semPaths(fit,intercepts=FALSE)
semPaths(fit,intercepts=FALSE, , exoVar = FALSE, exoCov = FALSE)
A <- rnorm(100)
B <- A + rnorm(100)
C <- B + rnorm(100)
DF <- data.frame(A,B,C)
# Two regressions:
res1 <- lm(B ~ C, data = DF)
res2 <- lm(A ~ B + C, data = DF)
# Plot both in the same path diagram in two ways:
semPaths(res1 + res2, "model", "est", intercepts=FALSE)
semPaths(list(res1,res2), "model", "est", intercepts=FALSE)
semPaths(res1 + res2, "model",  intercepts=FALSE)
semPaths(list(res1,res2), "model",  intercepts=FALSE)
semPaths(res1 + res2, "model", style="lisrel", intercepts=FALSE)
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE)
res1 <- lm(B ~ C, data = DF)
res2 <- lm(B ~ A, data = DF)
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE)
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6 '
fit <- lavaan::cfa(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
# Lambda matrices:
Loadings <- rbind(diag(1,2,2),diag(1,2,2),diag(1,2,2))
# Phi and Psi matrices:
LatVar <- diag(1,2,2)
# Beta matrix:
Beta <- matrix(0,2,2)
Beta[1,2] <- 1
# Theta matrices:
ManVar <- diag(1,nrow(Loadings),nrow(Loadings))
# Gamma matrix:
Gamma <- diag(1,2,2)
# Tau matrices:
ManInts <- rep(1,6)
# Alpha and Kappa matrices:
LatInts <- rep(1,2)
# Combine model:
mod <- lisrelModel(LY=Loadings,PS=LatVar,BE=Beta,TE=ManVar,
LX=Loadings,PH=LatVar,GA=Gamma,TD=ManVar,
TY=ManInts,TX=ManInts,AL=LatInts,KA=LatInts)
# Plot path diagram:
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4)
# Plot path diagram with more graphical options:
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="black", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="black")
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="black", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="blue")
colours()
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="violet")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="violetred")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="gray")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="lightblue")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="purple")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="royalblue1")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="snow")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="steelblue1")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="gray4")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="grey4")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="grey2")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="gray2")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="tan")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="navublue")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg="navyblue")
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "olivedrab3"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "olivedrab2"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "olivedrab1"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "seagreen"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "snow"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "snow4"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
semPaths(list(res1,res2,model), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6 '
semPaths(list(res1,res2,model), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
semPaths(model, "model", style="lisrel", intercepts=FALSE)
fit <- lavaan::cfa(model, data=Data)
semPaths(fit, "model", style="lisrel", intercepts=FALSE)
semPaths(list(res1,res2,fit), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6;f2=~f1 '
fit <- lavaan::cfa(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6;f2~f1 '
fit <- lavaan::cfa(model, data=Data)
model <- ' f1 = y1 + y2 + y3; f2 =~ y4 + y5 + y6;f2~f1 '
fit <- lavaan::cfa(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
fit <- lavaan(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6;f2~f1 '
fit <- lavaan(model, data=Data)
model <- ' f1 =~ -1+y1 + y2 + y3; f2 =~ -1+y4 + y5 + y6;f2=~f1 '
fit <- lavaan(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3; f2 =~ y4 + y5 + y6;f2=~f1 '
fit <- lavaan(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f2=~f1 '
fit <- lavaan(model, data=Data)
y1
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6'
fit <- lavaan(model, data=Data)
fit <- lavaan::sem(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f2~f1'
fit <- lavaan::sem(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f2~~f1'
fit <- lavaan::sem(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
Loadings <- rbind(diag(1,2,2),diag(1,2,2),diag(1,2,2))
LatVar <- diag(1,2,2)
Beta <- matrix(0,2,2)
Beta[1,2] <- 1
ManVar <- diag(1,nrow(Loadings),nrow(Loadings))
Gamma <- diag(1,2,2)
ManInts <- rep(1,6)
# Alpha and Kappa matrices:
LatInts <- rep(1,2)
# Combine model:
mod <- lisrelModel(LY=Loadings,PS=LatVar,BE=Beta,TE=ManVar,
LX=Loadings,PH=LatVar,GA=Gamma,TD=ManVar,
TY=ManInts,TX=ManInts,AL=LatInts,KA=LatInts)
# Plot path diagram:
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O")
semPaths(mod, whatLabels=no,as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, whatLabels="no",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, hide,as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", no, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", whatLabels=hide, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", whatLabels="hide", as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", whatLabels=omit, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", omit, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", whatLabels, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths", as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, what = "paths",  sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
as.expression=c("nodes","edges"),
semPaths(mod, what = "paths", as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, label.prop=0.5, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(fit,intercepts=FALSE, style="lisrel", exoVar = FALSE, exoCov = FALSE)
semPaths(fit,intercepts=FALSE, style="lisrel")
semPaths(res)
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4)
semPaths(mod, as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, "hide",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, "path","hide",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, "path","hide",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O", )
semPaths(mod, "path","hide",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE, label.norm="O")
semPaths(mod, "path","hide",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
semPaths(mod, "path","no",as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
mod <- lisrelModel(LY=Loadings,PS=LatVar,BE=Beta,TE=ManVar,
LX=Loadings,PH=LatVar,GA=Gamma,TD=ManVar,
TY=ManInts,TX=ManInts,AL=LatInts,KA=LatInts, modelLabels=F)
semPaths(mod,as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
semPaths(mod,sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
mod <- lisrelModel(LY=Loadings,PS=LatVar,BE=Beta,TE=ManVar,
LX=Loadings,PH=LatVar,GA=Gamma,TD=ManVar,
TY=ManInts,TX=ManInts,AL=LatInts,KA=LatInts, modelLabels=FALSE)
semPaths(mod,sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
# Combine model:
mod <- lisrelModel(LY=Loadings,PS=LatVar,BE=Beta,TE=ManVar,
LX=Loadings,PH=LatVar,GA=Gamma,TD=ManVar,
TY=ManInts,TX=ManInts,AL=LatInts,KA=LatInts)
semPaths(mod,as.expression=c("nodes","edges"), sizeMan = 3, sizeInt = 1, sizeLat = 4, curve=0.5, bg="white", groups="latents", intercepts=FALSE, borders=FALSE)
A <- rnorm(100)
B <- A + rnorm(100)
C <- B + rnorm(100)
DF <- data.frame(A,B,C)
# Two regressions:
res1 <- lm(B ~ C, data = DF)
res2 <- lm(B ~ A, data = DF)
# Plot both in the same path diagram in two ways:
semPaths(fit, "model", style="lisrel", intercepts=FALSE)
semPaths(list(res1,res2,fit), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
semPaths(list(res1,res2), "model", style="lisrel", intercepts=FALSE,bg=  "snow2"  )
semPaths(fit, "model", style="lisrel", intercepts=FALSE)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y5 + y6'
fit <- lavaan::sem(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel")
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6'
fit <- lavaan::sem(model, data=Data)
x2
y5
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6'
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4+ y5 + y6'
fit <- lavaan::sem(model, data=Data)
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ y4+ y5 + y6'
library("lavaan")
fit <- lavaan::sem(model, data=Data)
fit <- lavaan::sem(model, data=Data)
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library("rstudio", lib.loc="/Applications/RStudio.app/Contents/Resources/R/library")
semPaths(fit,intercepts=FALSE, style="lisrel")
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6'
fit <- lavaan::sem(model, data=Data)
fit <- lavaan::sem(model, data=Data)
fit <- lavaan::sem(model, data=Data)
fit <- lavaan::sem(model, data=Data)
detach("package:sem", unload=TRUE)
library("sem", lib.loc="/Users/valeria/Library/R/2.15/library")
fit <- lavaan::sem(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel")
semPaths(fit,intercepts=FALSE, style="lisrel", bg="black")
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow3")
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6
f3=~ x2+x3'
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6
f3=~ x2'
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6
f3=~ y5'
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6
f2=~ y5'
fit <- lavaan::sem(model, data=Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6
f3=~ y5'
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ x2 + y5 + y6
f1 + f2 ~ x1 + x2 + x3 '
fit <- lavaan::sem(model.Lavaan, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ x2 + y5 + y6
f2 ~ f1
'
fit <- lavaan::sem(model.Lavaan, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ x2 + y5 + y6
f2 = f1 '
fit <- lavaan::sem(model.Lavaan, data=Data)
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ x2 + y5 + y6
f2 =~ f1 '
fit <- lavaan::sem(model.Lavaan, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ x2 + y5 + y6'
fit <- lavaan::sem(model.Lavaan, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f3 =~ x2 + y5 + y6'
fit <- lavaan::sem(model.Lavaan, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f3 =~ y1 + y5 + y6'
fit <- lavaan::sem(model.Lavaan, data=Data)
model.Lavaan <- 'f1 =~ y1 + y2
f3 =~ y4 + y5
f2=~ y3 + y6'
fit <- lavaan::sem(model.Lavaan, data=Data)
model.Lavaan <- 'f1 =~ y1 + y2
f3 =~ y4 + y5
f2 =~ y3 + y6'
fit <- lavaan::cfa(model.Lavaan, data=Data)
fit <- lavaan(model.Lavaan, data=Data)
fit <- lavaan:cfa(model.Lavaan, data=Data)
fit <- lavaan::cfa(model.Lavaan, data=Data)
X <- rnorm(100)
Y <- rnorm(100)
A <- rnorm(100)
Z <- rnorm(100)
model.Lavaan <- 'f1 =~ A
f3 =~ Z + Y
f2 =~ X '
fit <- lavaan::cfa(model.Lavaan, data=Data)
Data=data.frame(A,X,Y,Z)
fit <- lavaan::cfa(model.Lavaan, data=Data)
par(mfow=c(2,2))
par(mfrow=c(2,2))
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6'
fit <- lavaan::cfa(model, data=Data)
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
names(Data) <- c(paste("y", 1:6, sep=""),
paste("x", 1:3, sep=""))
attach(Data)
model <- ' f1 =~ y1 + y2 + y3
f2 =~ x2+ y5 + y6'
fit <- lavaan::cfa(model, data=Data)
semPaths(fit,intercepts=FALSE, style="lisrel", bg="snow2")
model2 <- ' v1 =~ y1 + y2 + y3
v2 =~ x2+ x3'
fit2 <- lavaan::cfa(model2, data=Data)
model2 <- ' v1 =~ y1 + y2 + y3
v2 =~ y4+y5'
fit2 <- lavaan::cfa(model2, data=Data)
semPaths(fit2,intercepts=FALSE, style="lisrel", bg="snow2")
model3<-'r1=~ y1+y2+y3'
fit3 <- lavaan::cfa(model3, data=Data)
semPaths(fit3,intercepts=FALSE, style="lisrel", bg="snow2")
Beta
library(xtable)
xtable(Beta)
install.packages("xml")
install.packages("XML")
library("XML", lib.loc="/Users/valeria/Library/R/2.15/library")
install.packages("StatDataML")
install.packages("mirt")
install.packages("Rstem")
install.packages("~/Documents/TRI/trabajo final/Rstem_0.4-1.tar.tar.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/TRI/trabajo final/Rstem_0.4-1.tar.tar.gz", repos = NULL, type = "source")
install.packages("~/Documents/TRI/trabajo final/Rstem_0.4-1.tar.gz", repos = NULL, type = "source")
install.packages("wordcloud")
install.packages("Rcpp")
install.packages("pln")
install.packages("R2WinBUGS")
install.packages("truncnorm")
install.packages("truncnorm")
install.packages("tmvtnorm")
qnorm(0.005)
qnorm(0.005)*1,2
qnorm(0.005)*1.2
82.74+2.57*12/sqrt(10)
82.74-2.57*12/sqrt(10)
82.71-2.57*12/sqrt(10)
82.71+2.57*12/sqrt(10)
names(tags)
library(shiny)
names(tags)
tags$a
?tags$a
?a
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
?tags$a
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
nombres.ejes<-c("Medical Physics",
"Thermodynamics",
"Nanosciences",
"Atomic Physics",
"Nuclear Physics",
"Physical Chemistry",
"Astrophysics",
"Biophysics",
"Electromagnetic Optics",
"Radiation Physics",
"Quantum Electrodynamics",
"Quantum Physics")
nombres.ejes
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
library(shiny)
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
library(shinyapps)
shinyapps::setAccountInfo(name='mirt',token='42D2433610AA1CBE1FB6309644A27787',secret='vf/x/u3MX3Gq+XFvly3vQyAwCEmQ4dvZBF6tg6ry')
shinyapps::deployApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
runApp("~/Documents/TRI/trabajo final/Sergio app/mirt_app")
require(devtools)
library(slidify)
library(slidifyLibraries)
setwd("~/Documents/Eventos/gun_deaths_presentation/gun_deaths_pres/mydeck")
slidify("index.Rmd") ## html file is generated
browseURL("index.html")
